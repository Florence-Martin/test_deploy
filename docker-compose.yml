version: '3'
services:
  frontend:
    build: ./front
    restart: always
    ports:
      - "3000:3000"
    networks:
      - mynetwork

  api:
    build: ./api
    restart: always
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/base_test
    depends_on:
      - postgres
    networks:
      - mynetwork 

  postgres:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: base_test
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mynetwork 

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 5050
    ports:
      - "5050:5050"
    volumes:
      - pgadmin_static:/pgadmin4/pgadmin/static
      - pgadmin_browser:/pgadmin4/pgadmin/browser/templates/browser
      - pgadmin_tools:/pgadmin4/pgadmin/tools/templates/js/js
    depends_on:
      - postgres
    networks:
      - mynetwork

  nginx:
    image: nginx:alpine
    ports:
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - pgadmin_static:/pgadmin4/pgadmin/static
      - pgadmin_browser:/pgadmin4/pgadmin/browser/templates/browser
      - pgadmin_tools:/pgadmin4/pgadmin/tools/templates/js/js
    depends_on:
      - frontend
      - api
      - pgadmin
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_static:
  pgadmin_browser:
  pgadmin_tools:
