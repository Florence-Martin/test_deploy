name: Deploy, Build, Run, and Test

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            if [ ! -d ~/thomas ]; then
              mkdir -p ~/thomas
              git clone https://github.com/${{ github.repository }} ~/thomas
            fi
            cd ~/thomas
            git pull origin main

  build:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Build Docker Containers
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/thomas
            sudo docker-compose down -v
            yes | sudo docker image prune -a
            sudo docker-compose build

  run:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Start Docker Containers
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/thomas
            sudo docker-compose up -d

  wait-for-api:
    runs-on: ubuntu-latest
    needs: run

    steps:
      - name: Wait for API to be ready
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            while ! curl -sSf http://localhost:3001/api/dogs > /dev/null; do
              echo "Waiting for API to be ready..."
              sleep 5
            done
            echo "API is ready!"

  test:
    runs-on: ubuntu-latest
    needs: wait-for-api

    steps:
      - name: Run Tests
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/thomas/api
            if ! command -v npm &> /dev/null; then
              echo "npm could not be found, installing..."
              curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            npm install
            npm run test

            if [ $? -ne 0 ]; then
              echo "Tests failed, exiting with error."
              exit 1
            fi

  finalize-deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Finalize Deployment
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/thomas
            sudo docker-compose up -d
